# Multi-stage build for MIRG Backend
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Build TypeScript
RUN npm run build

# Production stage
FROM node:18-alpine AS runtime

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S mirg -u 1001

# Copy built application
COPY --from=builder --chown=mirg:nodejs /app/dist ./dist
COPY --from=builder --chown=mirg:nodejs /app/package*.json ./
COPY --from=builder --chown=mirg:nodejs /app/node_modules ./node_modules

# Switch to non-root user
USER mirg

# Expose port
EXPOSE 3100

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3100/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"

CMD ["npm", "start"]