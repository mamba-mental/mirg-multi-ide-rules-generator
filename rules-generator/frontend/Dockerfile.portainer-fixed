# Multi-stage build for MIRG Frontend - Fixed for Git Repository Context
FROM node:18-alpine AS builder

WORKDIR /app

# Copy frontend package files from repository root context
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci

# Copy frontend source code and configuration
COPY frontend/ ./

# Build application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine AS runtime

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S mirg -u 1001

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx config
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Change ownership of nginx directories
RUN chown -R mirg:nodejs /var/cache/nginx && \
    chown -R mirg:nodejs /var/log/nginx && \
    chown -R mirg:nodejs /etc/nginx/conf.d && \
    chown -R mirg:nodejs /usr/share/nginx/html && \
    touch /var/run/nginx.pid && \
    chown -R mirg:nodejs /var/run/nginx.pid

# Switch to non-root user
USER mirg

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

CMD ["nginx", "-g", "daemon off;"]