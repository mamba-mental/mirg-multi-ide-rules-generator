version: '3.8'

# MIRG (Multi-IDE Rules Generator) Stack - Git Repository Deployment
# Fixed version for Portainer Git deployment with proper build contexts
# Maps to NAS server ports: Frontend :3011, Backend :3121, Weaviate :8093

services:
  # Vector Database - Weaviate
  weaviate:
    image: semitechnologies/weaviate:1.21.2
    container_name: mirg-weaviate
    restart: unless-stopped
    ports:
      - "8093:8080"  # Fixed port mapping to match phase-2-security
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'backup-filesystem,text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
      STANDALONE_MODE: 'true'
      DISABLE_GOSSIP: 'true'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.portainer
    container_name: mirg-backend
    restart: unless-stopped
    ports:
      - "3121:3100"  # Keep consistent port mapping
    environment:
      NODE_ENV: production
      PORT: 3100
      WEAVIATE_URL: http://weaviate:8080
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY:-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY:-}
      XAI_API_KEY: ${XAI_API_KEY:-}
      GROQ_API_KEY: ${GROQ_API_KEY:-}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY:-}
      OLLAMA_API_KEY: ${OLLAMA_API_KEY:-}
      GITHUB_API_KEY: ${GITHUB_API_KEY:-}
    depends_on:
      weaviate:
        condition: service_healthy
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3100/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.portainer
    container_name: mirg-frontend
    restart: unless-stopped
    ports:
      - "3011:3000"  # Keep consistent port mapping
    environment:
      NODE_ENV: production
      VITE_API_URL: http://192.168.86.97:3121
    depends_on:
      - backend
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

# Named volumes for data persistence
volumes:
  weaviate_data:
    driver: local
    name: mirg_weaviate_data

# Network configuration
networks:
  mirg-network:
    driver: bridge
    name: mirg-network