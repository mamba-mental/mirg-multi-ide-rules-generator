version: '3.8'

# MIRG (Multi-IDE Rules Generator) Stack - Git Repository Deployment
# Designed for Portainer deployment using Git repository with relative paths
# Maps to NAS server ports: Frontend :3011, Backend :3121, Weaviate :8001

services:
  # Vector Database - Weaviate
  weaviate:
    image: semitechnologies/weaviate:1.21.2
    container_name: mirg-weaviate
    restart: unless-stopped
    ports:
      - "8001:8080"  # Maps to NAS external port 8001
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'backup-filesystem,text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - mirg-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.portainer
    container_name: mirg-backend
    restart: unless-stopped
    ports:
      - "3121:3100"  # Maps to NAS external port 3121
    environment:
      NODE_ENV: production
      PORT: 3100
      WEAVIATE_URL: http://weaviate:8080
      # Environment variables will be loaded from .env file or Portainer
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    depends_on:
      - weaviate
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
    container_name: mirg-frontend
    restart: unless-stopped
    ports:
      - "3011:3000"  # Maps to NAS external port 3011
    depends_on:
      - backend
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for data persistence
volumes:
  weaviate_data:
    driver: local
    name: mirg_weaviate_data

# Network configuration
networks:
  mirg-network:
    driver: bridge
    name: mirg-network