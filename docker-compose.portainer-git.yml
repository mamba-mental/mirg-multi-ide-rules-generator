version: '3.8'

services:
  weaviate:
    image: semitechnologies/weaviate:1.21.2
    ports:
      - "8081:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.portainer
    ports:
      - "3121:3100"
    environment:
      - NODE_ENV=production
      - PORT=3100
      - WEAVIATE_URL=http://weaviate:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      weaviate:
        condition: service_healthy
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
    ports:
      - "3011:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mirg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  weaviate_data:
    driver: local

networks:
  mirg-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16